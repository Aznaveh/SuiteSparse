line 599 UMFPACK/Core/cholmod_sparse.c
case CHOLMOD_REAL: //xtype = CHOLMOD_PATTERN
		for (j = 0 ; j < ncol ; j++)
		{
		    p = Ap [j] ;
		    pend = p + Anz [j] ;
		    for ( ; p < pend ; p++)
		    {
			Ci [p] = Ai [p] ;
			Cx [p] = Ax [p] ;
		    }
		}
Check/cholmod_check.c:    for (j = 0 ; j < ncol ; j++)
Check/cholmod_check.c:	for (j = 0 ; j < ncol ; j++)
Check/cholmod_check.c:    for (j = 0 ; j < ncol ; j++)
Check/cholmod_write.c:    for (j = 0 ; j < ncol ; j++)
Cholesky/cholmod_etree.c:    for (j = 0 ; j < ncol ; j++)
Cholesky/cholmod_etree.c:	for (j = 0 ; j < ncol ; j++)
Cholesky/cholmod_etree.c:	for (j = 0 ; j < ncol ; j++)
Cholesky/cholmod_resymbol.c:	    for (j = 0 ; j < ncol ; j++)
Cholesky/cholmod_rowcolcounts.c:	    for (j = 0 ; j < ncol ; j++)
Core/cholmod_add.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:    for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_copy.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:		for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:		for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:		for (j = 0 ; j < ncol ; j++)
Core/cholmod_sparse.c:		for (j = 0 ; j < ncol ; j++)
Core/cholmod_transpose.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_transpose.c:	    for (j = 0 ; j < ncol ; j++)
Core/cholmod_transpose.c:	for (j = 0 ; j < ncol ; j++)
Core/cholmod_triplet.c:    for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:	for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:	for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:	for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:    for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:    for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_dense.c:    for (j = 0 ; j < ncol ; j++)
Core/t_cholmod_triplet.c:    for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	    for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:    for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:    for (j = 0 ; j < ncol ; j++) \
MATLAB/cholmod_matlab.c:    for (j = 0 ; j < ncol ; j++) \
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MATLAB/cholmod_matlab.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_drop.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_drop.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_drop.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_norm.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_scale.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_scale.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_scale.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_scale.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_ssmult.c:    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_ssmult.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_ssmult.c:	for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_symmetry.c:    for (j = 0 ; j < ncol ; j++)
MatrixOps/cholmod_symmetry.c:    for (j = 0 ; j < ncol ; j++)	/* examine each column of A */
MatrixOps/cholmod_vertcat.c:    for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:		for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:	    for (j = 0 ; j < ncol ; j++)
MatrixOps/t_cholmod_sdmult.c:	    for (j = 0 ; j < ncol ; j++)
Tcov/cm.c:	for (j = 0 ; j < ncol ; j++)
Tcov/cm.c:	for (j = 0 ; j < ncol ; j++)
Tcov/cm.c:	for (j = 0 ; j < ncol ; j++)
Tcov/cm.c:	for (j = 0 ; j < ncol ; j++)
Tcov/cm.c:    for (j = 0 ; j < ncol ; j++)
Tcov/null2.c:    for (j = 0 ; j < ncol ; j++)
Tcov/test_ops.c:    for (j = 0 ; j < ncol ; j++)
Tcov/unpack.c:    for (j = 0 ; j < ncol ; j++)
